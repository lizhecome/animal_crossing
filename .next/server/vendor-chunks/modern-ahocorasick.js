"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/modern-ahocorasick";
exports.ids = ["vendor-chunks/modern-ahocorasick"];
exports.modules = {

/***/ "(ssr)/./node_modules/modern-ahocorasick/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/modern-ahocorasick/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AhoCorasick)\n/* harmony export */ });\n// src/index.ts\nvar AhoCorasick = class {\n  constructor(keywords) {\n    const { failure, gotoFn, output } = this._buildTables(keywords);\n    this.gotoFn = gotoFn;\n    this.output = output;\n    this.failure = failure;\n  }\n  _buildTables(keywords) {\n    const gotoFn = {\n      0: {}\n    };\n    const output = {};\n    let state = 0;\n    for (const word of keywords) {\n      let curr = 0;\n      for (const l of word) {\n        if (gotoFn[curr] && l in gotoFn[curr]) {\n          curr = gotoFn[curr][l];\n        } else {\n          state++;\n          gotoFn[curr][l] = state;\n          gotoFn[state] = {};\n          curr = state;\n          output[state] = [];\n        }\n      }\n      output[curr].push(word);\n    }\n    const failure = {};\n    const xs = [];\n    for (const l in gotoFn[0]) {\n      const state2 = gotoFn[0][l];\n      failure[state2] = 0;\n      xs.push(state2);\n    }\n    while (xs.length > 0) {\n      const r = xs.shift();\n      if (r !== void 0) {\n        for (const l in gotoFn[r]) {\n          const s = gotoFn[r][l];\n          xs.push(s);\n          let state2 = failure[r];\n          while (state2 > 0 && !(l in gotoFn[state2])) {\n            state2 = failure[state2];\n          }\n          if (l in gotoFn[state2]) {\n            const fs = gotoFn[state2][l];\n            failure[s] = fs;\n            output[s] = [...output[s], ...output[fs]];\n          } else {\n            failure[s] = 0;\n          }\n        }\n      }\n    }\n    return {\n      gotoFn,\n      output,\n      failure\n    };\n  }\n  search(str) {\n    let state = 0;\n    const results = [];\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        const foundStrs = this.output[state];\n        results.push([i, foundStrs]);\n      }\n    }\n    return results;\n  }\n  match(str) {\n    let state = 0;\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbW9kZXJuLWFob2NvcmFzaWNrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmltYWxfY3Jvc3NpbmcvLi9ub2RlX21vZHVsZXMvbW9kZXJuLWFob2NvcmFzaWNrL2Rpc3QvaW5kZXguanM/NmU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW5kZXgudHNcbnZhciBBaG9Db3Jhc2ljayA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3Ioa2V5d29yZHMpIHtcbiAgICBjb25zdCB7IGZhaWx1cmUsIGdvdG9Gbiwgb3V0cHV0IH0gPSB0aGlzLl9idWlsZFRhYmxlcyhrZXl3b3Jkcyk7XG4gICAgdGhpcy5nb3RvRm4gPSBnb3RvRm47XG4gICAgdGhpcy5vdXRwdXQgPSBvdXRwdXQ7XG4gICAgdGhpcy5mYWlsdXJlID0gZmFpbHVyZTtcbiAgfVxuICBfYnVpbGRUYWJsZXMoa2V5d29yZHMpIHtcbiAgICBjb25zdCBnb3RvRm4gPSB7XG4gICAgICAwOiB7fVxuICAgIH07XG4gICAgY29uc3Qgb3V0cHV0ID0ge307XG4gICAgbGV0IHN0YXRlID0gMDtcbiAgICBmb3IgKGNvbnN0IHdvcmQgb2Yga2V5d29yZHMpIHtcbiAgICAgIGxldCBjdXJyID0gMDtcbiAgICAgIGZvciAoY29uc3QgbCBvZiB3b3JkKSB7XG4gICAgICAgIGlmIChnb3RvRm5bY3Vycl0gJiYgbCBpbiBnb3RvRm5bY3Vycl0pIHtcbiAgICAgICAgICBjdXJyID0gZ290b0ZuW2N1cnJdW2xdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0YXRlKys7XG4gICAgICAgICAgZ290b0ZuW2N1cnJdW2xdID0gc3RhdGU7XG4gICAgICAgICAgZ290b0ZuW3N0YXRlXSA9IHt9O1xuICAgICAgICAgIGN1cnIgPSBzdGF0ZTtcbiAgICAgICAgICBvdXRwdXRbc3RhdGVdID0gW107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG91dHB1dFtjdXJyXS5wdXNoKHdvcmQpO1xuICAgIH1cbiAgICBjb25zdCBmYWlsdXJlID0ge307XG4gICAgY29uc3QgeHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGwgaW4gZ290b0ZuWzBdKSB7XG4gICAgICBjb25zdCBzdGF0ZTIgPSBnb3RvRm5bMF1bbF07XG4gICAgICBmYWlsdXJlW3N0YXRlMl0gPSAwO1xuICAgICAgeHMucHVzaChzdGF0ZTIpO1xuICAgIH1cbiAgICB3aGlsZSAoeHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc3QgciA9IHhzLnNoaWZ0KCk7XG4gICAgICBpZiAociAhPT0gdm9pZCAwKSB7XG4gICAgICAgIGZvciAoY29uc3QgbCBpbiBnb3RvRm5bcl0pIHtcbiAgICAgICAgICBjb25zdCBzID0gZ290b0ZuW3JdW2xdO1xuICAgICAgICAgIHhzLnB1c2gocyk7XG4gICAgICAgICAgbGV0IHN0YXRlMiA9IGZhaWx1cmVbcl07XG4gICAgICAgICAgd2hpbGUgKHN0YXRlMiA+IDAgJiYgIShsIGluIGdvdG9GbltzdGF0ZTJdKSkge1xuICAgICAgICAgICAgc3RhdGUyID0gZmFpbHVyZVtzdGF0ZTJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAobCBpbiBnb3RvRm5bc3RhdGUyXSkge1xuICAgICAgICAgICAgY29uc3QgZnMgPSBnb3RvRm5bc3RhdGUyXVtsXTtcbiAgICAgICAgICAgIGZhaWx1cmVbc10gPSBmcztcbiAgICAgICAgICAgIG91dHB1dFtzXSA9IFsuLi5vdXRwdXRbc10sIC4uLm91dHB1dFtmc11dO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmYWlsdXJlW3NdID0gMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgIGdvdG9GbixcbiAgICAgIG91dHB1dCxcbiAgICAgIGZhaWx1cmVcbiAgICB9O1xuICB9XG4gIHNlYXJjaChzdHIpIHtcbiAgICBsZXQgc3RhdGUgPSAwO1xuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgbCA9IHN0cltpXTtcbiAgICAgIHdoaWxlIChzdGF0ZSA+IDAgJiYgIShsIGluIHRoaXMuZ290b0ZuW3N0YXRlXSkpIHtcbiAgICAgICAgc3RhdGUgPSB0aGlzLmZhaWx1cmVbc3RhdGVdO1xuICAgICAgfVxuICAgICAgaWYgKCEobCBpbiB0aGlzLmdvdG9GbltzdGF0ZV0pKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgc3RhdGUgPSB0aGlzLmdvdG9GbltzdGF0ZV1bbF07XG4gICAgICBpZiAodGhpcy5vdXRwdXRbc3RhdGVdLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgZm91bmRTdHJzID0gdGhpcy5vdXRwdXRbc3RhdGVdO1xuICAgICAgICByZXN1bHRzLnB1c2goW2ksIGZvdW5kU3Ryc10pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuICBtYXRjaChzdHIpIHtcbiAgICBsZXQgc3RhdGUgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBsID0gc3RyW2ldO1xuICAgICAgd2hpbGUgKHN0YXRlID4gMCAmJiAhKGwgaW4gdGhpcy5nb3RvRm5bc3RhdGVdKSkge1xuICAgICAgICBzdGF0ZSA9IHRoaXMuZmFpbHVyZVtzdGF0ZV07XG4gICAgICB9XG4gICAgICBpZiAoIShsIGluIHRoaXMuZ290b0ZuW3N0YXRlXSkpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBzdGF0ZSA9IHRoaXMuZ290b0ZuW3N0YXRlXVtsXTtcbiAgICAgIGlmICh0aGlzLm91dHB1dFtzdGF0ZV0ubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuZXhwb3J0IHtcbiAgQWhvQ29yYXNpY2sgYXMgZGVmYXVsdFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/modern-ahocorasick/dist/index.js\n");

/***/ })

};
;